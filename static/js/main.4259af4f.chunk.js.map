{"version":3,"sources":["components/UserPool.js","components/Account.js","components/HighAuth.js","components/NavBar.js","pages/Base.js","components/PageHeader.js","components/Status.js","components/SignUp.js","components/SignIn.js","components/Auth.js","pages/Home.js","pages/Secret.js","components/ChangePassword.js","components/ForgotPassword.js","pages/Settings.js","App.js","index.js"],"names":["CognitoUserPool","UserPoolId","process","ClientId","AccountContext","createContext","getSession","a","Promise","resolve","reject","user","Pool","getCurrentUser","error","session","getUserAttributes","userAttributes","reduce","acc","attr","Name","Value","props","useState","authenticated","setAuthenticated","useEffect","authenticate","Username","Password","CognitoUser","authDetails","AuthenticationDetails","authenticateUser","onSuccess","data","console","log","onFailure","newPasswordRequired","Provider","value","signOut","children","HighAuth","useContext","NavBar","Navbar","bg","variant","expand","className","to","Toggle","aria-controls","Collapse","id","Nav","BasePage","PageHeader","title","subTitle","Status","role","onClick","type","SignUp","email","setEmail","password","setPassword","onSubmit","e","preventDefault","UserPool","signUp","htmlFor","aria-describedby","placeholder","onChange","target","SignIn","Auth","HomePage","Base","SecretPage","ChangePassword","newPassword","setNewPassword","messageRef","useRef","changePassword","current","innerHTML","result","name","Card","text","Header","Body","ref","ForgotPassword","code","setCode","confirmPassword","setConfirmPassword","stage","setStage","codeFormRef","emailFormRef","getUser","toLowerCase","then","catch","sendCode","forgotPassword","inputVerificationCode","CodeDeliveryDetails","Destination","classList","add","setTimeout","resetPassword","message","defaultValue","SettingPage","App","exact","path","component","ReactDOM","render","StrictMode","basename","Account","document","getElementById"],"mappings":"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","file":"static/js/main.4259af4f.chunk.js","sourcesContent":["import {CognitoUserPool} from \"amazon-cognito-identity-js\";\n\nconst poolData = {\n    UserPoolId: process.env.REACT_APP_AWS_COGNITO_USER_POOL_ID,\n    ClientId: process.env.REACT_APP_AWS_COGNITO_CLIENT_ID\n};\n\nexport default new CognitoUserPool(poolData);\n","import React, { createContext, useEffect, useState } from 'react';\nimport { AuthenticationDetails, CognitoUser } from \"amazon-cognito-identity-js\";\nimport Pool from \"components/UserPool\";\n\nconst AccountContext = createContext();\n\nconst getSession = async () => await new Promise((resolve, reject) => {\n    const user = Pool.getCurrentUser();\n\n    if(!user) {\n        return reject();\n    }\n\n    user.getSession(async (error, session) => {\n\n        if(error) {\n            return reject(error);\n        }\n\n        const userAttributes = await getUserAttributes(user);\n\n        resolve({\n            user,\n            ...session,\n            ...userAttributes\n        });\n    });\n});\n\nconst getUserAttributes = async (user) => await new Promise((resolve, reject) => {\n\n    user.getUserAttributes((error, userAttributes) => {\n        if(error) {\n            return reject(error);\n        }\n\n        userAttributes = userAttributes.reduce((acc, attr) => {\n            const {Name, Value} = attr;\n            return {\n                ...acc,\n                [Name]: Value,\n            }\n        }, {});\n\n        resolve(userAttributes);\n    });\n});\n\nexport default (props) => {\n\n    const [authenticated, setAuthenticated] = useState(false);\n    useEffect(() => {\n        (async () => {\n            try {\n                await getSession();\n                setAuthenticated(true);\n            } catch (e) { /* Nothing To Handle */ }\n        })();\n    }, []);\n\n    const authenticate = async (Username, Password) => await new Promise(((resolve, reject) => {\n        const user = new CognitoUser({Username, Pool});\n        const authDetails = new AuthenticationDetails({Username, Password});\n\n        user.authenticateUser(authDetails, {\n            onSuccess: data => {\n                console.log('signInSuccess:', data);\n                setAuthenticated(true);\n                resolve(data);\n            },\n            onFailure: error => {\n                console.error('signInError:', error);\n                reject(error);\n            },\n            newPasswordRequired: data => {\n                console.log('newPasswordRequired:', data);\n                resolve(data);\n            }\n        });\n    }));\n\n    const signOut = () => {\n        const user = Pool.getCurrentUser();\n        if(!user) {\n            return;\n        }\n        user.signOut();\n        setAuthenticated(false);\n    };\n\n    return (\n        <AccountContext.Provider value={{\n            authenticate,\n            signOut,\n            authenticated,\n            getSession\n        }}>\n            {props.children}\n        </AccountContext.Provider>\n    );\n};\n\nexport { AccountContext };\n","import { useContext } from 'react';\nimport { AccountContext } from \"components/Account\";\n\nconst HighAuth = ({children}) => {\n\n    const { authenticated } = useContext(AccountContext);\n\n    if(!authenticated) {\n        return null;\n    }\n\n    return children;\n};\n\nexport default HighAuth;\n","import React from 'react';\nimport Navbar from \"react-bootstrap/Navbar\";\nimport Nav from \"react-bootstrap/Nav\";\nimport { Link } from \"react-router-dom\";\nimport HighAuth from \"components/HighAuth\";\n\nconst NavBar = () => {\n    return (\n        <Navbar bg=\"gradient-info\" variant=\"dark\" expand=\"md\">\n            <Link className=\"navbar-brand\" to=\"/\">React Authentication</Link>\n            <Navbar.Toggle aria-controls=\"basic-navbar-nav\" />\n            <Navbar.Collapse id=\"basic-navbar-nav\">\n                <Nav className=\"mr-auto\">\n                    <Link className=\"nav-link\" to=\"/\">Home</Link>\n                    <HighAuth>\n                        <Link className=\"nav-link\" to=\"/secret\">Secret</Link>\n                    </HighAuth>\n                    <Link className=\"nav-link\" to=\"/account\">My Account</Link>\n                </Nav>\n            </Navbar.Collapse>\n        </Navbar>\n    );\n};\n\nexport default NavBar;","import React, { Fragment } from 'react';\nimport NavBar from \"components/NavBar\";\n\nconst BasePage = ({children}) => {\n\n    return (\n        <Fragment>\n            <NavBar/>\n            {children}\n        </Fragment>\n    );\n};\n\nexport default BasePage;","\nimport React from 'react';\n\nconst PageHeader = ({title, subTitle = null}) => {\n    return (\n        <h1 className=\"text-info display-4 my-3\">\n            {title} <small className=\"text-muted font-weight-light\">{subTitle}</small>\n        </h1>\n    );\n};\n\nexport default PageHeader;","import React, { useContext } from 'react';\nimport { AccountContext } from 'components/Account';\n\nconst Status = () => {\n\n    const { signOut, authenticated } = useContext(AccountContext);\n\n    if(authenticated) {\n        return(\n            <div className=\"alert alert-info border-info d-flex justify-content-between align-items-center\" role=\"alert\">\n                <div>You Are Logged In Successfully</div>\n                <button\n                    onClick={signOut}\n                    type=\"button\" className=\"btn btn-secondary\">Logout</button>\n            </div>\n        )\n    } else {\n        return(\n            <div className=\"alert alert-warning border-warning d-flex justify-content-between align-items-center\" role=\"alert\">\n                <div>Please Login Bellow</div>\n            </div>\n        );\n    }\n};\n\nexport default Status;\n","import React, { Fragment, useState } from 'react';\nimport UserPool from \"components/UserPool\";\n\nconst SignUp = () => {\n\n    const [email, setEmail] = useState('');\n    const [password, setPassword] = useState('');\n\n\n    const onSubmit = (e) => {\n        e.preventDefault();\n\n        UserPool.signUp(email, password, [], null, (error, data) => {\n            if(error) {\n                return console.error('signUpError: ', error);\n            }\n            console.log('signUpSuccess: ', data);\n        });\n    };\n\n    return (\n        <Fragment>\n            <h3 className=\"text-uppercase\">Sign Up</h3>\n            <form onSubmit={onSubmit}>\n                <div className=\"form-group\">\n                    <label htmlFor=\"email\">Email address</label>\n                    <input type=\"email\" className=\"form-control\" id=\"email\" aria-describedby=\"emailHelp\"\n                           value={email} placeholder=\"Enter email\"\n                           onChange={(e) => setEmail(e.target.value)}\n                    />\n                </div>\n                <div className=\"form-group\">\n                    <label htmlFor=\"password\">Password</label>\n                    <input type=\"password\" className=\"form-control\" id=\"password\"\n                           value={password} placeholder=\"Password\"\n                           onChange={(e) => setPassword(e.target.value)}\n                    />\n                </div>\n\n                <button type=\"submit\" className=\"btn btn-secondary\">Sign Up</button>\n            </form>\n        </Fragment>\n    );\n};\n\nexport default SignUp;\n","import React, { Fragment, useContext, useState } from 'react';\nimport { AccountContext } from 'components/Account';\n\nconst SignIn = () => {\n\n    const [email, setEmail] = useState('');\n    const [password, setPassword] = useState('');\n\n    const { authenticate } = useContext(AccountContext);\n\n    const onSubmit = async (e) => {\n        e.preventDefault();\n\n        try {\n            await authenticate(email, password);\n        } catch (error) { }\n    };\n\n    return (\n        <Fragment>\n            <h4 className=\"text-uppercase\">Sign In</h4>\n            <form onSubmit={onSubmit}>\n                <div className=\"form-group\">\n                    <label htmlFor=\"email\">Email address</label>\n                    <input type=\"email\" className=\"form-control\" id=\"email\" aria-describedby=\"emailHelp\"\n                           value={email} placeholder=\"Enter email\"\n                           onChange={(e) => setEmail(e.target.value)}\n                    />\n                </div>\n                <div className=\"form-group\">\n                    <label htmlFor=\"password\">Password</label>\n                    <input type=\"password\" className=\"form-control\" id=\"password\"\n                           value={password} placeholder=\"Password\"\n                           onChange={(e) => setPassword(e.target.value)}\n                    />\n                </div>\n\n                <button type=\"submit\" className=\"btn btn-info\">Sign In</button>\n            </form>\n        </Fragment>\n    );\n};\n\nexport default SignIn;\n","import React, { useContext } from 'react';\nimport SignUp from \"components/SignUp\";\nimport SignIn from \"components/SignIn\";\nimport { AccountContext } from \"components/Account\";\n\nconst Auth = () => {\n\n    const { authenticated } = useContext(AccountContext);\n\n    if(!authenticated) {\n        return (\n            <div className=\"row\">\n                <div className=\"col\">\n                    <SignUp />\n                </div>\n                <div className=\"col\">\n                    <SignIn />\n                </div>\n            </div>\n        )\n    } else {\n        return null;\n    }\n};\n\nexport default Auth;\n","import React from 'react';\nimport BasePage from \"pages/Base\";\nimport PageHeader from \"components/PageHeader\";\nimport Status from \"components/Status\";\nimport Auth from \"components/Auth\";\n\nconst HomePage = () => {\n\n    return (\n        <BasePage>\n            <div className=\"container page-home text-center\">\n                <PageHeader title=\"React Authentication\" subTitle=\"Using AWS Cognito\"/>\n                <Status/>\n                <Auth/>\n            </div>\n        </BasePage>\n    );\n};\n\nexport default HomePage;","import React from 'react';\nimport BasePage from \"pages/Base\";\nimport PageHeader from \"components/PageHeader\";\n\nconst SecretPage = () => {\n\n    return (\n        <BasePage>\n            <div className=\"container page-home text-center\">\n                <PageHeader title=\"Secret Page\" subTitle=\"Need Authentication\"/>\n            </div>\n        </BasePage>\n    );\n};\n\nexport default SecretPage;","import React, { useContext, useRef, useState } from 'react';\nimport Card from \"react-bootstrap/Card\";\nimport { AccountContext } from \"components/Account\";\n\nconst ChangePassword = () => {\n\n    const [password, setPassword] = useState('');\n    const [newPassword, setNewPassword] = useState('');\n    const { authenticated, getSession, authenticate } = useContext(AccountContext);\n    const messageRef = useRef();\n\n    if(!authenticated) {\n        return null;\n    }\n\n    const changePassword = async(e) => {\n        const session = await getSession();\n        const user = session.user;\n        const email = session.email;\n\n        try {\n            await authenticate(email, password);\n        } catch (error) {\n            messageRef.current.innerHTML = `<div class=\"alert alert-danger mt-3\">User is Not Authorized! Wrong Current Password</div>`;\n            return;\n        }\n\n        user.changePassword(password, newPassword, (error, result) => {\n            if(error) {\n                messageRef.current.innerHTML = `<div class=\"alert alert-danger mt-3\">${error.name}</div>`;\n                return;\n            }\n            messageRef.current.innerHTML = `<div class=\"alert alert-success mt-3\">${result}</div>`;\n        });\n\n    };\n\n    const onSubmit = async (e) => {\n        e.preventDefault();\n        await changePassword();\n    };\n\n    return (\n        <Card\n            bg=\"gradient-info\"\n            text=\"light\"\n            className=\"col-6 mx-auto mt-5\"\n        >\n            <Card.Header className=\"bg-transparent\">\n                <h3 className=\"text-uppercase\">Change Password</h3>\n            </Card.Header>\n            <Card.Body>\n                <form onSubmit={onSubmit}>\n                    <div className=\"form-group\">\n                        <label htmlFor=\"password\">Current Password</label>\n                        <input type=\"password\" className=\"form-control\" id=\"password\"\n                               value={password} placeholder=\"Current Password\"\n                               onChange={(e) => setPassword(e.target.value)}\n                        />\n                    </div>\n                    <div className=\"form-group\">\n                        <label htmlFor=\"newPassword\">Password</label>\n                        <input type=\"password\" className=\"form-control\" id=\"newPassword\"\n                               value={newPassword} placeholder=\"New Password\"\n                               onChange={(e) => setNewPassword(e.target.value)}\n                        />\n                    </div>\n\n                    <button type=\"submit\" className=\"btn btn-secondary\">Confirm</button>\n                </form>\n                <div className=\"message\" ref={messageRef}/>\n            </Card.Body>\n        </Card>\n    );\n};\n\nexport default ChangePassword;\n","import React, { Fragment, useContext, useRef, useState } from 'react';\nimport { AccountContext } from \"components/Account\";\nimport Card from \"react-bootstrap/Card\";\nimport {CognitoUser} from \"amazon-cognito-identity-js\";\nimport Pool from \"components/UserPool\";\n\nconst ForgotPassword = () => {\n\n    const STAGE = {\n        EMAIL: 1,\n        CODE: 2,\n    };\n\n    const [email, setEmail] = useState('');\n    const [code, setCode] = useState('');\n    const [password, setPassword] = useState('');\n    const [confirmPassword, setConfirmPassword] = useState('');\n    const [stage, setStage] = useState(STAGE.EMAIL);\n    const { authenticated, getSession } = useContext(AccountContext);\n    const messageRef = useRef();\n    const codeFormRef = useRef();\n    const emailFormRef = useRef();\n\n    if(authenticated) {\n        return null;\n    }\n\n    const getUser = () => new CognitoUser({\n        Username: email.toLowerCase(),\n        Pool\n    });\n\n    // Get User Email from Session (if User is Logged In)\n    getSession().then(({email}) => setEmail(email)).catch(e => {});\n\n    const sendCode = async(e) => {\n        e.preventDefault();\n\n        const user = getUser();\n\n        user.forgotPassword({\n            onSuccess: data => {\n                console.log('onSuccess', data);\n            },\n            onFailure: error => {\n                console.log('onFailure', error);\n            },\n            inputVerificationCode: data => {\n                console.log('inputVerificationCode', data);\n                messageRef.current.innerHTML = `\n                    <div class=\"alert alert-success mt-3\">\n                        If There is any record in our system, an email will be sent to:\n                        <br/>\n                        <b>${data.CodeDeliveryDetails.Destination}</b>\n                        </div>\n                `;\n                codeFormRef.current.classList.add('d-none');\n                setTimeout(() => setStage(2), 3000);\n            }\n        });\n    };\n\n    const resetPassword = async(e) => {\n        e.preventDefault();\n\n        if(password !== confirmPassword) {\n            messageRef.current.innerHTML = `\n                <div class=\"alert alert-success mt-3\">\n                    Entered Password Should be Identical with Confirmed Password! \n                </div>\n            `;\n            return;\n        }\n\n        const user = getUser();\n\n        user.confirmPassword(code, password, {\n\n            onSuccess: data => {\n                messageRef.current.innerHTML = `\n                <div class=\"alert alert-success mt-3\">Your Password Has Successfully Updated</div>\n                `;\n            },\n            onFailure: error => {\n                messageRef.current.innerHTML = `\n                <div class=\"alert alert-danger mt-3\">${error.message}</div>\n            `;\n            }\n        });\n    };\n\n    return (\n        <Card\n            bg=\"gradient-info\"\n            text=\"light\"\n            className=\"col-6 mx-auto mt-5\"\n        >\n        {stage === 1 && (\n            <Fragment>\n                <Card.Header className=\"bg-transparent\">\n                    <h3 className=\"text-uppercase\">Send Verification Code</h3>\n                </Card.Header>\n                <Card.Body>\n                    <form ref={codeFormRef} onSubmit={sendCode}>\n                        <div className=\"form-group\">\n                            <label htmlFor=\"email\">Email address</label>\n                            <input type=\"email\" className=\"form-control\" id=\"email\" aria-describedby=\"emailHelp\"\n                                   defaultValue={email} placeholder=\"Enter email\"\n                                   onChange={(e) => setEmail(e.target.value)}\n                            />\n                        </div>\n                        <button type=\"submit\" className=\"btn btn-secondary\">Send Verification Code</button>\n                    </form>\n                    <div className=\"message\" ref={messageRef}/>\n                </Card.Body>\n            </Fragment>\n        )}\n\n        {stage === 2 && (\n            <Fragment>\n                <Card.Header className=\"bg-transparent\">\n                    <h3 className=\"text-uppercase\">Change Password</h3>\n                </Card.Header>\n                <Card.Body>\n                    <form ref={emailFormRef} onSubmit={resetPassword}>\n                        <div className=\"form-group\">\n                            <input type=\"text\" className=\"form-control\" id=\"code\" aria-describedby=\"codeHelp\"\n                                   placeholder=\"Enter Verification Code\"\n                                   value={code}\n                                   onChange={(e) => setCode(e.target.value)}\n                            />\n                        </div>\n                        <div className=\"form-group\">\n                            <input type=\"password\" className=\"form-control\" id=\"password\"\n                                   placeholder=\"Enter Password\"\n                                   value={password}\n                                   onChange={(e) => setPassword(e.target.value)}\n                            />\n                        </div>\n                        <div className=\"form-group\">\n                            <input type=\"password\" className=\"form-control\" id=\"confirmPassword\"\n                                   placeholder=\"Confirm Password\"\n                                   value={confirmPassword}\n                                   onChange={(e) => setConfirmPassword(e.target.value)}\n                            />\n                        </div>\n\n                        <button type=\"submit\" className=\"btn btn-secondary\">Change Password</button>\n                    </form>\n                    <div className=\"message\" ref={messageRef}/>\n                </Card.Body>\n            </Fragment>\n        )}\n        </Card>\n    );\n};\n\nexport default ForgotPassword;\n","import React from 'react';\nimport BasePage from \"pages/Base\";\nimport PageHeader from \"components/PageHeader\";\nimport ChangePassword from \"components/ChangePassword\";\nimport ForgotPassword from \"components/ForgotPassword\";\n\nconst SettingPage = () => {\n\n    return (\n        <BasePage>\n            <div className=\"container page-home text-center\">\n                <PageHeader title=\"Account Page\"/>\n                <ChangePassword/>\n                <ForgotPassword/>\n            </div>\n        </BasePage>\n    );\n};\n\nexport default SettingPage;","import React from 'react';\nimport 'App.scss';\nimport { Route } from \"react-router-dom\";\nimport HomePage from \"pages/Home\";\nimport SecretPage from \"pages/Secret\";\nimport HighAuth from \"components/HighAuth\";\nimport SettingPage from \"pages/Settings\";\n\nconst App = () => {\n\n    return(\n        <div className=\"app\">\n            <Route exact path=\"/\" component={HomePage} />\n            <HighAuth>\n                <Route exact path=\"/secret\" component={SecretPage} />\n            </HighAuth>\n            <Route exact path=\"/account\" component={SettingPage} />\n        </div>\n    );\n};\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { BrowserRouter } from \"react-router-dom\";\nimport App from 'App';\nimport Account from \"components/Account\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <BrowserRouter basename={process.env.PUBLIC_URL}>\n        <Account>\n            <App />\n        </Account>\n    </BrowserRouter>\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n"],"sourceRoot":""}