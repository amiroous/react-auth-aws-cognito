{"version":3,"sources":["components/UserPool.js","components/Account.js","components/Status.js","components/SignUp.js","components/SignIn.js","components/Auth.js","App.js","index.js"],"names":["CognitoUserPool","UserPoolId","process","ClientId","AccountContext","createContext","props","useState","authenticated","setAuthenticated","useEffect","a","getSession","Promise","resolve","reject","user","Pool","getCurrentUser","error","session","authenticate","Username","Password","CognitoUser","authDetails","AuthenticationDetails","authenticateUser","onSuccess","data","console","log","onFailure","newPasswordRequired","Provider","value","signOut","children","Status","useContext","className","role","onClick","type","SignUp","email","setEmail","password","setPassword","onSubmit","e","preventDefault","UserPool","signUp","htmlFor","id","aria-describedby","placeholder","onChange","target","SignIn","Auth","App","Account","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.7b0007fe.chunk.js","sourcesContent":["import {CognitoUserPool} from \"amazon-cognito-identity-js\";\n\nconst poolData = {\n    UserPoolId: process.env.REACT_APP_AWS_COGNITO_USER_POOL_ID,\n    ClientId: process.env.REACT_APP_AWS_COGNITO_CLIENT_ID\n};\n\nexport default new CognitoUserPool(poolData);\n","import React, { createContext, useEffect, useState } from 'react';\nimport { AuthenticationDetails, CognitoUser } from \"amazon-cognito-identity-js\";\nimport Pool from \"components/UserPool\";\n\nconst AccountContext = createContext();\n\nexport default (props) => {\n\n    const [authenticated, setAuthenticated] = useState(false);\n    useEffect(() => {\n        (async () => {\n            try {\n                await getSession();\n                setAuthenticated(true);\n            } catch (e) { /* Nothing To Handle */ }\n        })();\n    }, []);\n\n    const getSession = async () => await new Promise((resolve, reject) => {\n        const user = Pool.getCurrentUser();\n\n        if(!user) {\n            return reject();\n        }\n\n        user.getSession((error, session) => {\n\n            if(error) {\n                return reject(error);\n            }\n\n            resolve(session);\n        });\n    });\n\n    const authenticate = async (Username, Password) => await new Promise(((resolve, reject) => {\n        const user = new CognitoUser({Username, Pool});\n        const authDetails = new AuthenticationDetails({Username, Password});\n\n        user.authenticateUser(authDetails, {\n            onSuccess: data => {\n                console.log('signInSuccess:', data);\n                setAuthenticated(true);\n                resolve(data);\n            },\n            onFailure: error => {\n                console.error('signInError:', error);\n                reject(error);\n            },\n            newPasswordRequired: data => {\n                console.log('newPasswordRequired:', data);\n                resolve(data);\n            }\n        });\n    }));\n\n    const signOut = () => {\n        const user = Pool.getCurrentUser();\n        if(!user) {\n            return;\n        }\n        user.signOut();\n        setAuthenticated(false);\n    };\n\n    return (\n        <AccountContext.Provider value={{\n            authenticate,\n            signOut,\n            authenticated\n        }}>\n            {props.children}\n        </AccountContext.Provider>\n    );\n};\n\nexport { AccountContext };\n","import React, { useContext } from 'react';\nimport { AccountContext } from 'components/Account';\n\nconst Status = () => {\n\n    const { signOut, authenticated } = useContext(AccountContext);\n\n    if(authenticated) {\n        return(\n            <div className=\"alert alert-info border-info d-flex justify-content-between align-items-center\" role=\"alert\">\n                <div>You Are Logged In Successfully</div>\n                <button\n                    onClick={signOut}\n                    type=\"button\" className=\"btn btn-primary\">Logout</button>\n            </div>\n        )\n    } else {\n        return(\n            <div className=\"alert alert-warning border-warning d-flex justify-content-between align-items-center\" role=\"alert\">\n                <div>Please Login Bellow</div>\n            </div>\n        );\n    }\n};\n\nexport default Status;\n","import React, { Fragment, useState } from 'react';\nimport UserPool from \"components/UserPool\";\n\nconst SignUp = () => {\n\n    const [email, setEmail] = useState('');\n    const [password, setPassword] = useState('');\n\n\n    const onSubmit = (e) => {\n        e.preventDefault();\n\n        UserPool.signUp(email, password, [], null, (error, data) => {\n            if(error) {\n                return console.error('signUpError: ', error);\n            }\n            console.log('signUpSuccess: ', data);\n        });\n    };\n\n    return (\n        <Fragment>\n            <h3 className=\"text-uppercase\">Sign Up</h3>\n            <form onSubmit={onSubmit}>\n                <div className=\"form-group\">\n                    <label htmlFor=\"email\">Email address</label>\n                    <input type=\"email\" className=\"form-control\" id=\"email\" aria-describedby=\"emailHelp\"\n                           value={email} placeholder=\"Enter email\"\n                           onChange={(e) => setEmail(e.target.value)}\n                    />\n                </div>\n                <div className=\"form-group\">\n                    <label htmlFor=\"password\">Password</label>\n                    <input type=\"password\" className=\"form-control\" id=\"password\"\n                           value={password} placeholder=\"Password\"\n                           onChange={(e) => setPassword(e.target.value)}\n                    />\n                </div>\n\n                <button type=\"submit\" className=\"btn btn-primary\">Sign Up</button>\n            </form>\n        </Fragment>\n    );\n};\n\nexport default SignUp;\n","import React, { Fragment, useContext, useState } from 'react';\nimport { AccountContext } from 'components/Account';\n\nconst SignIn = () => {\n\n    const [email, setEmail] = useState('');\n    const [password, setPassword] = useState('');\n\n    const { authenticate } = useContext(AccountContext);\n\n    const onSubmit = async (e) => {\n        e.preventDefault();\n\n        try {\n            await authenticate(email, password);\n        } catch (error) { }\n    };\n\n    return (\n        <Fragment>\n            <h4 className=\"text-uppercase\">Sign In</h4>\n            <form onSubmit={onSubmit}>\n                <div className=\"form-group\">\n                    <label htmlFor=\"email\">Email address</label>\n                    <input type=\"email\" className=\"form-control\" id=\"email\" aria-describedby=\"emailHelp\"\n                           value={email} placeholder=\"Enter email\"\n                           onChange={(e) => setEmail(e.target.value)}\n                    />\n                </div>\n                <div className=\"form-group\">\n                    <label htmlFor=\"password\">Password</label>\n                    <input type=\"password\" className=\"form-control\" id=\"password\"\n                           value={password} placeholder=\"Password\"\n                           onChange={(e) => setPassword(e.target.value)}\n                    />\n                </div>\n\n                <button type=\"submit\" className=\"btn btn-info\">Sign In</button>\n            </form>\n        </Fragment>\n    );\n};\n\nexport default SignIn;\n","import React, { useContext } from 'react';\nimport SignUp from \"components/SignUp\";\nimport SignIn from \"components/SignIn\";\nimport { AccountContext } from \"components/Account\";\n\nconst Auth = () => {\n\n    const { authenticated } = useContext(AccountContext);\n\n    if(!authenticated) {\n        return (\n            <div className=\"row\">\n                <div className=\"col\">\n                    <SignUp />\n                </div>\n                <div className=\"col\">\n                    <SignIn />\n                </div>\n            </div>\n        )\n    } else {\n        return null;\n    }\n};\n\nexport default Auth;\n","import React from 'react';\nimport 'App.scss';\n\nimport Account from \"components/Account\";\nimport Status from \"components/Status\";\nimport Auth from \"components/Auth\";\n\nconst App = () => {\n\n    return(\n        <Account>\n            <div className=\"min-vh-100 bg-gradient-light\">\n                <div className=\"container pt-3\">\n                    <h1 className=\"display-4\">React Auth App with AWS Cognito</h1>\n                    <hr className=\"\"/>\n                    <Status/>\n                    <Auth/>\n                </div>\n            </div>\n        </Account>\n    );\n};\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from 'App';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n"],"sourceRoot":""}